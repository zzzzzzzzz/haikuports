From 852131f9d60eb83f00843261ed42ea62d4f7a29b Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:52:03 +0200
Subject: [PATCH 01/13] Tell perl that BFS has a link count of 1

---
 cpan/File-Temp/lib/File/Temp.pm | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/cpan/File-Temp/lib/File/Temp.pm b/cpan/File-Temp/lib/File/Temp.pm
index 817c6d9..c3298a6 100644
--- a/cpan/File-Temp/lib/File/Temp.pm
+++ b/cpan/File-Temp/lib/File/Temp.pm
@@ -1425,7 +1425,8 @@ sub unlink0 {
     # On NFS the link count may still be 1 but we can't know that
     # we are on NFS.  Since we can't be sure, we'll defer it
 
-    return 1 if $fh[3] == 0 || $^O eq 'cygwin';
+    # On haiku, the link count seems to be always 1 (at least for BFS)
+    return 1 if $fh[3] == 0 || $^O eq 'cygwin' || $^O eq 'haiku';
   }
   # fall-through if we can't unlink now
   _deferred_unlink($fh, $path, 0);
-- 
2.7.0

From b47cd91b5eb37082cd09a23be6f2c983ed2ee66d Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:52:53 +0200
Subject: [PATCH 02/13] Haiku defines, but does not implement O_EXLOCK

---
 cpan/File-Temp/t/lock.t | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/cpan/File-Temp/t/lock.t b/cpan/File-Temp/t/lock.t
index ff8c7f9..4364bf6 100644
--- a/cpan/File-Temp/t/lock.t
+++ b/cpan/File-Temp/t/lock.t
@@ -8,7 +8,8 @@ use Fcntl;
 BEGIN {
 # see if we have O_EXLOCK
   eval { &Fcntl::O_EXLOCK; };
-  if ($@) {
+  if ($@  || $^O eq 'haiku') {
+    # haiku doesn't implement O_EXLOCK yet (but it defines the value)
     plan skip_all => 'Do not seem to have O_EXLOCK';
   } else {
     plan tests => 4;
-- 
2.7.0

From 6fb8379525e3181a997fda94ec3985aa843539a4 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:53:40 +0200
Subject: [PATCH 03/13] haiku sets all its specifics via Configure

---
 hints/haiku.sh | 45 +--------------------------------------------
 1 file changed, 1 insertion(+), 44 deletions(-)

diff --git a/hints/haiku.sh b/hints/haiku.sh
index fa8ebe5..0f09f53 100644
--- a/hints/haiku.sh
+++ b/hints/haiku.sh
@@ -1,44 +1 @@
-# Haiku hints file
-# $Id$
-
-case "$prefix" in
-'') prefix="/boot/common" ;;
-*) ;; # pass the user supplied value through
-esac
-
-libpth='/boot/home/config/lib /boot/common/lib /system/lib'
-usrinc='/boot/develop/headers/posix'
-locinc='/boot/home/config/include /boot/common/include /boot/develop/headers'
-
-libc='/system/lib/libroot.so'
-libs='-lnetwork'
-
-# Use Haiku's malloc() by default.
-case "$usemymalloc" in
-'') usemymalloc='n' ;;
-esac
-
-# Haiku generally supports hard links, but the default file system (BFS)
-# doesn't. So better avoid using hard links.
-d_link='undef'
-dont_use_nlink='define'
-
-# The array syserrlst[] is useless for the most part.
-# Large negative numbers really kind of suck in arrays.
-d_syserrlst='undef'
-
-# Haiku uses gcc.
-cc="gcc"
-ld='gcc'
-
-# The runtime loader library path variable is LIBRARY_PATH.
-case "$ldlibpthname" in
-'') ldlibpthname=LIBRARY_PATH ;;
-esac
-
-# as of alpha 4.1 (at the latest) some symbols are versioned,
-# confusing the nm lookup
-case "$usenm" in
-'') usenm='undef' ;;
-esac
-
+# haiku sets all its specifics via Configure
-- 
2.7.0

From 79897d15f793d626cb891c77c2d71159d7cab073 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:54:15 +0200
Subject: [PATCH 04/13] Tell perl that Haiku needs haikuish.h installed as well

---
 installperl | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/installperl b/installperl
index af61203..ed94fe6 100755
--- a/installperl
+++ b/installperl
@@ -381,6 +381,11 @@ elsif ($Is_Cygwin) { # On Cygwin symlink it to CORE to make Makefile happy
 
     # AIX needs perl.exp installed as well.
     push(@corefiles,'perl.exp') if $^O eq 'aix';
+    if ($^O eq 'haiku') {
+	# Haiku needs haikuish.h installed as well.
+	mkpath("$installarchlib/CORE/haiku", $opts{verbose}, 0777);
+	push(@corefiles,'haiku/haikuish.h');
+    }
 }
 
 
-- 
2.7.0

From d0ca85235463141f5be5a50f873c47e3086f493b Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 14:55:13 +0200
Subject: [PATCH 05/13] Fix handling of exit codes on Haiku

---
 t/run/exit.t | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/t/run/exit.t b/t/run/exit.t
index ce3270e..cab9a79 100644
--- a/t/run/exit.t
+++ b/t/run/exit.t
@@ -55,18 +55,18 @@ is( ${^CHILD_ERROR_NATIVE}, $native_success,  'Normal exit ${^CHILD_ERROR_NATIVE
 if (!$vms_exit_mode) {
   my $posix_ok = eval { require POSIX; };
   my $wait_macros_ok = defined &POSIX::WIFEXITED;
-  eval { POSIX::WIFEXITED(${^CHILD_ERROR_NATIVE}) };
+  eval { POSIX::WIFEXITED($?) };
   $wait_macros_ok = 0 if $@;
   $exit = run('exit 42');
   is( $exit >> 8, 42,             'Non-zero exit' );
   is( $exit, $?,                  'Non-zero exit $?' );
-  isnt( !${^CHILD_ERROR_NATIVE}, 0, 'Non-zero exit ${^CHILD_ERROR_NATIVE}' );
+  isnt( ${^CHILD_ERROR_NATIVE}, 0, 'Non-zero exit ${^CHILD_ERROR_NATIVE}' );
   SKIP: {
     skip("No POSIX", 3) unless $posix_ok;
     skip("No POSIX wait macros", 3) unless $wait_macros_ok;
-    ok(POSIX::WIFEXITED(${^CHILD_ERROR_NATIVE}), "WIFEXITED");
-    ok(!POSIX::WIFSIGNALED(${^CHILD_ERROR_NATIVE}), "WIFSIGNALED");
-    is(POSIX::WEXITSTATUS(${^CHILD_ERROR_NATIVE}), 42, "WEXITSTATUS");
+    ok(POSIX::WIFEXITED($?), "WIFEXITED");
+    ok(!POSIX::WIFSIGNALED($?), "WIFSIGNALED");
+    is(POSIX::WEXITSTATUS($?), 42, "WEXITSTATUS");
   }
 
   SKIP: {
@@ -85,9 +85,9 @@ if (!$vms_exit_mode) {
     SKIP: {
       skip("No POSIX", 3) unless $posix_ok;
       skip("No POSIX wait macros", 3) unless $wait_macros_ok;
-      ok(!POSIX::WIFEXITED(${^CHILD_ERROR_NATIVE}), "WIFEXITED");
-      ok(POSIX::WIFSIGNALED(${^CHILD_ERROR_NATIVE}), "WIFSIGNALED");
-      is(POSIX::WTERMSIG(${^CHILD_ERROR_NATIVE}), 15, "WTERMSIG");
+      ok(!POSIX::WIFEXITED($?), "WIFEXITED");
+      ok(POSIX::WIFSIGNALED($?), "WIFSIGNALED");
+      is(POSIX::WTERMSIG($?), 15, "WTERMSIG");
     }
   }
 
-- 
2.7.0

From a181acdd2bc83b86b3fca4691e0a4490ec8ac478 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 22 Sep 2013 15:00:44 +0200
Subject: [PATCH 06/13] Fix include path of errno.h

---
 ext/Errno/Errno_pm.PL | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/ext/Errno/Errno_pm.PL b/ext/Errno/Errno_pm.PL
index d345e98..1fe9312 100644
--- a/ext/Errno/Errno_pm.PL
+++ b/ext/Errno/Errno_pm.PL
@@ -139,7 +139,7 @@ sub get_files {
 	$file{$linux_errno_h} = 1;
     } elsif ($^O eq 'haiku') {
 	# hidden in a special place
-	$file{'/boot/develop/headers/posix/errno.h'} = 1;
+	$file{'/boot/system/develop/headers/posix/errno.h'} = 1;
 
     } elsif ($^O eq 'vos') {
 	# avoid problem where cpp returns non-POSIX pathnames
-- 
2.7.0

From 5edc20fa4affabe714e7087c5932113a5bf0754c Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sat, 28 Sep 2013 13:46:42 +0200
Subject: [PATCH 07/13] Adjust ExtUtils::MakeMaker for PM-Haiku.

* MakeMaker-projects trying to install into 'site-perl' while specifying
  PREFIX would end up using a wrong 'site-perl' prefix.
* Split MM_Haiku.pm off MM_BeOS.pm, implementing Haiku-specific overrides
  for MakeMaker.
---
 cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm       |  3 +-
 cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm | 70 ++++++++++++++++++++++++
 2 files changed, 72 insertions(+), 1 deletion(-)
 create mode 100644 cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm

diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm
index b327932..ff255e3 100644
--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM.pm
@@ -60,7 +60,8 @@ if( $^O eq 'MSWin32' ) {
 $Is{UWIN}   = $^O =~ /^uwin(-nt)?$/;
 $Is{Cygwin} = $^O eq 'cygwin';
 $Is{NW5}    = $Config{osname} eq 'NetWare';  # intentional
-$Is{BeOS}   = ($^O =~ /beos/i or $^O eq 'haiku');
+$Is{BeOS}   = $^O =~ /beos/i;
+$Is{Haiku}  = $^O eq 'haiku';
 $Is{DOS}    = $^O eq 'dos';
 if( $Is{NW5} ) {
     $^O = 'NetWare';
diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
new file mode 100644
index 0000000..81e5f99
--- /dev/null
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
@@ -0,0 +1,70 @@
+package ExtUtils::MM_Haiku;
+
+use strict;
+
+=head1 NAME
+
+ExtUtils::MM_Haiku - methods to override UN*X behaviour in ExtUtils::MakeMaker
+
+=head1 SYNOPSIS
+
+ use ExtUtils::MM_Haiku;	# Done internally by ExtUtils::MakeMaker if needed
+
+=head1 DESCRIPTION
+
+See ExtUtils::MM_Unix for a documentation of the methods provided
+there. This package overrides the implementation of these methods, not
+the semantics.
+
+=over 4
+
+=cut
+
+use ExtUtils::MakeMaker::Config;
+use File::Spec;
+require ExtUtils::MM_Any;
+require ExtUtils::MM_Unix;
+
+our @ISA = qw( ExtUtils::MM_Any ExtUtils::MM_Unix );
+our $VERSION = '6.66';
+
+
+=item os_flavor
+
+Haiku is Haiku.
+
+=cut
+
+sub os_flavor {
+    return('Haiku');
+}
+
+=head3 init_INSTALL_from_PREFIX
+
+  $mm->init_INSTALL_from_PREFIX;
+
+=cut
+
+sub init_INSTALL_from_PREFIX {
+    my $self = shift;
+
+	# If a prefix has been given from outside, the default implementation
+	# will set PERLPREFIX, SITEPREFIX and VENDORPREFIX to identical values,
+	# but due to the way how Haiku's package management works, PERLPREFIX
+	# and VENDORPREFIX are not writable at all (as they're being populated
+	# from installed packages via package-fs). SITEPREFIX, however needs to
+	# be set to a path which can be written to (since site packages are
+	# expected to be installed "manually") - so we make sure it points
+	# to a 'non-packaged'-folder:
+    my $prefixGiven = $self->{PREFIX};
+	$self->SUPER::init_INSTALL_from_PREFIX();
+	if ($prefixGiven) {
+        $self->{SITEPREFIX} = '$(PREFIX)/non-packaged';
+    } 
+}
+
+=back
+
+1;
+__END__
+
-- 
2.7.0

From 185c18e6bb826f42626031e8e80d49adc0dd15cc Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Tue, 8 Oct 2013 22:16:37 +0200
Subject: [PATCH 08/13] Avoid using -rpath for dynamic modules.

---
 cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm | 27 ++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
index 81e5f99..25ace13 100644
--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
@@ -65,6 +65,33 @@ sub init_INSTALL_from_PREFIX {
 
 =back
 
+=head3 init_others
+
+    $MM->init_others();
+
+Initializes the macro definitions having to do with compiling and
+linking used by tools_other() and places them in the $MM object.
+
+If there is no description, its the same as the parameter to
+WriteMakefile() documented in ExtUtils::MakeMaker.
+
+=cut
+
+sub init_others {
+    my $self = shift;
+
+	$self->SUPER::init_others();
+
+	# Don't use run-time paths for libraries required by dynamic
+	# modules on Haiku, as that wouldn't work should a library be moved
+	# (for instance because the package has been activated somewhere else).
+    $self->{LD_RUN_PATH} = "";
+
+    return;
+}
+
+=back
+
 1;
 __END__
 
-- 
2.7.0

From 8e684b3bbe0c198ae358cbc6840018f0b8294753 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Tue, 8 Oct 2013 22:17:26 +0200
Subject: [PATCH 09/13] Add script sitecustomize.pl for setting up @INC as we
 need it.

---
 sitecustomize.pl | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)
 create mode 100644 sitecustomize.pl

diff --git a/sitecustomize.pl b/sitecustomize.pl
new file mode 100644
index 0000000..a321e51
--- /dev/null
+++ b/sitecustomize.pl
@@ -0,0 +1,36 @@
+#! perl
+
+use Config;
+
+# Remove all compiled-in paths referring to Perl's installation dir
+# and replace them with a static set of paths that implement the intended
+# searching order:
+my @ourINC = (
+	"/boot/home/config/lib/perl5/$Config{version}/$Config{archname}",
+	"/boot/home/config/lib/perl5/$Config{version}",
+	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{version}/$Config{archname}",
+	"/boot/home/config/non-packaged/lib/perl5/site_perl/$Config{version}",
+	"/boot/home/config/lib/perl5/vendor_perl/$Config{version}/$Config{archname}",
+	"/boot/home/config/lib/perl5/vendor_perl/$Config{version}",
+	"/boot/home/config/lib/perl5/vendor_perl",
+	"/boot/system/lib/perl5/$Config{version}/$Config{archname}",
+	"/boot/system/lib/perl5/$Config{version}",
+	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{version}/$Config{archname}",
+	"/boot/system/non-packaged/lib/perl5/site_perl/$Config{version}",
+	"/boot/system/lib/perl5/vendor_perl/$Config{version}/$Config{archname}",
+	"/boot/system/lib/perl5/vendor_perl/$Config{version}",
+	"/boot/system/lib/perl5/vendor_perl",
+);
+my @newINC;
+my $removedPerlPaths;
+foreach my $inc (@INC) {
+	if ($inc =~ m[^/packages/perl-$Config{version}-\d+/.self/]o) {
+		if (! $removedPerlPaths) {
+			push @newINC, @ourINC;
+			$removedPerlPaths = 1;
+		}
+		next;
+	}
+	push @newINC, $inc;
+}
+@INC = @newINC;
-- 
2.7.0

From 9d5875a4ff424a355c67c375d601c5c76df0b505 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Wed, 9 Oct 2013 20:29:38 +0200
Subject: [PATCH 10/13] Fix initialization check for CPAN.

* On Haiku, only the site-lib directories will ever be writable,
  as the others read-only. This avoids CPAN asking for a way to
  circumvent unwritable lib dirs.
---
 cpan/CPAN/lib/CPAN/FirstTime.pm | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/cpan/CPAN/lib/CPAN/FirstTime.pm b/cpan/CPAN/lib/CPAN/FirstTime.pm
index 531c115..b9d87d7 100644
--- a/cpan/CPAN/lib/CPAN/FirstTime.pm
+++ b/cpan/CPAN/lib/CPAN/FirstTime.pm
@@ -2068,6 +2068,12 @@ sub _print_urllist {
 }
 
 sub _can_write_to_libdirs {
+    if ($^O eq 'haiku') {
+    	# on Haiku, the other dirs are never writable, as they are
+    	# being populated by packagefs
+        return -w $Config{installsitelib}
+            && -w $Config{installsitearch}
+    }
     return -w $Config{installprivlib}
         && -w $Config{installarchlib}
         && -w $Config{installsitelib}
-- 
2.7.0

From 178d95fa8b6af51fa02110b484836bd629af5411 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Sun, 13 Oct 2013 17:32:50 +0200
Subject: [PATCH 11/13] Add support for HAIKU_USE_VENDOR_DIRECTORIES.

* Adjust MakeMaker to automatically switch to vendor directories if
  requested via HAIKU_USE_VENDOR_DIRECTORIES.
---
 cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm | 33 ++++++------------------
 1 file changed, 8 insertions(+), 25 deletions(-)

diff --git a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
index 25ace13..8a04ead 100644
--- a/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
+++ b/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Haiku.pm
@@ -29,21 +29,20 @@ our @ISA = qw( ExtUtils::MM_Any ExtUtils::MM_Unix );
 our $VERSION = '6.66';
 
 
-=item os_flavor
-
-Haiku is Haiku.
-
-=cut
-
 sub os_flavor {
     return('Haiku');
 }
 
-=head3 init_INSTALL_from_PREFIX
+sub init_main {
+    my $self = shift;
 
-  $mm->init_INSTALL_from_PREFIX;
+    # switch to vendor directories if requested.
+    if ($ENV{'HAIKU_USE_VENDOR_DIRECTORIES'}) {
+        $self->{INSTALLDIRS} ||= 'vendor';
+    }
 
-=cut
+    $self->SUPER::init_main();
+}
 
 sub init_INSTALL_from_PREFIX {
     my $self = shift;
@@ -63,20 +62,6 @@ sub init_INSTALL_from_PREFIX {
     } 
 }
 
-=back
-
-=head3 init_others
-
-    $MM->init_others();
-
-Initializes the macro definitions having to do with compiling and
-linking used by tools_other() and places them in the $MM object.
-
-If there is no description, its the same as the parameter to
-WriteMakefile() documented in ExtUtils::MakeMaker.
-
-=cut
-
 sub init_others {
     my $self = shift;
 
@@ -90,8 +75,6 @@ sub init_others {
     return;
 }
 
-=back
-
 1;
 __END__
 
-- 
2.7.0

From 85f319eb850dfd0f5a6b6615808315a8d8ecd35a Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Fri, 9 Jun 2017 21:30:33 +0200
Subject: [PATCH 12/13] disable fstack-protector for Haiku

---
 Configure | 1 +
 1 file changed, 1 insertion(+)

diff --git a/Configure b/Configure
index bdcfaf1..acdd3da 100755
--- a/Configure
+++ b/Configure
@@ -5507,6 +5507,7 @@ default|recommended)
 	# thing. (NWC)
 	case "$osname" in
 	amigaos) ;; # -fstack-protector builds but doesn't work
+	haiku) ;; # -fstack-protector builds but doesn't work
 	*)	case "$gccversion" in
 		?*)	set stack-protector-strong -fstack-protector-strong
 			eval $checkccflag
-- 
2.7.0

From 44642096f45e9fa1438386a6c4bcc7ea5bfd2f09 Mon Sep 17 00:00:00 2001
From: zzzzzzzzz <bug5lay4r@gmail.com>
Date: Mon, 20 Nov 2017 23:49:37 +0000
Subject: [PATCH 13/13] Drop dropping privileges as it doesn't work for haiku

---
 cpan/Pod-Perldoc/lib/Pod/Perldoc.pm | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm b/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
index 8d695b2..6ccebd3 100644
--- a/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
+++ b/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
@@ -67,6 +67,7 @@ BEGIN {
  *is_dos     = $^O eq 'dos'     ? \&TRUE : \&FALSE unless defined &is_dos;
  *is_os2     = $^O eq 'os2'     ? \&TRUE : \&FALSE unless defined &is_os2;
  *is_cygwin  = $^O eq 'cygwin'  ? \&TRUE : \&FALSE unless defined &is_cygwin;
+ *is_haiku   = $^O eq 'haiku'   ? \&TRUE : \&FALSE unless defined &is_haiku;
  *is_linux   = $^O eq 'linux'   ? \&TRUE : \&FALSE unless defined &is_linux;
  *is_hpux    = $^O =~ m/hpux/   ? \&TRUE : \&FALSE unless defined &is_hpux;
  *is_amigaos = $^O eq 'amigaos' ? \&TRUE : \&FALSE unless defined &is_amigaos;
@@ -2059,7 +2060,7 @@ sub drop_privs_maybe {
 
     # Attempt to drop privs if we should be tainting and aren't
     if (!( $self->is_vms || $self->is_mswin32 || $self->is_dos
-          || $self->is_os2
+          || $self->is_os2 || $self->is_haiku
          )
         && ($> == 0 || $< == 0)
         && !$self->am_taint_checking()
-- 
2.7.0

From 2eb72fc68ebefaa6b8a3f5758157899aee0bba1b Mon Sep 17 00:00:00 2001
From: zzzzzzzzz <bug5lay4r@gmail.com>
Date: Mon, 20 Nov 2017 23:49:37 +0000
Subject: [PATCH 13/13] Fix longstanding bug #176 with perldoc.

Drop dropping privileges as it doesn't workifor Haiku.
---
 cpan/Pod-Perldoc/lib/Pod/Perldoc.pm | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm b/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
index 8d695b2..6ccebd3 100644
--- a/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
+++ b/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
@@ -67,6 +67,7 @@ BEGIN {
  *is_dos     = $^O eq 'dos'     ? \&TRUE : \&FALSE unless defined &is_dos;
  *is_os2     = $^O eq 'os2'     ? \&TRUE : \&FALSE unless defined &is_os2;
  *is_cygwin  = $^O eq 'cygwin'  ? \&TRUE : \&FALSE unless defined &is_cygwin;
+ *is_haiku   = $^O eq 'haiku'   ? \&TRUE : \&FALSE unless defined &is_haiku;
  *is_linux   = $^O eq 'linux'   ? \&TRUE : \&FALSE unless defined &is_linux;
  *is_hpux    = $^O =~ m/hpux/   ? \&TRUE : \&FALSE unless defined &is_hpux;
  *is_amigaos = $^O eq 'amigaos' ? \&TRUE : \&FALSE unless defined &is_amigaos;
@@ -2059,7 +2060,7 @@ sub drop_privs_maybe {
 
     # Attempt to drop privs if we should be tainting and aren't
     if (!( $self->is_vms || $self->is_mswin32 || $self->is_dos
-          || $self->is_os2
+          || $self->is_os2 || $self->is_haiku
          )
         && ($> == 0 || $< == 0)
         && !$self->am_taint_checking()
-- 
2.7.0

